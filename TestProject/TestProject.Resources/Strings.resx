<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNotFound" xml:space="preserve">
    <value>Account not found</value>
  </data>
  <data name="AlertMessege" xml:space="preserve">
    <value>AlertMessege</value>
  </data>
  <data name="IfYouGoOnTaskyDropWithoutSaveYourChangesWillBeLoseDoYouWantThis" xml:space="preserve">
    <value>If you go on TaskyDrop whithout save, you changes will be lose! Do you want this?</value>
  </data>
  <data name="ConfirmPasswordMustBeRequired" xml:space="preserve">
    <value>ConfirmPassword must be required</value>
  </data>
  <data name="ConfirmPasswordMustBeComparePassword" xml:space="preserve">
    <value>Confirm Password must be compare Password</value>
  </data>
  <data name="DoYouWantDeleteThisTask" xml:space="preserve">
    <value>Do you want delete this task?</value>
  </data>
  <data name="YouCantRegistrateWhenFieldIsEmpty" xml:space="preserve">
    <value>You can't registrate when field is empty!</value>
  </data>
  <data name="YouCantSaveTaskWhenFieldIsEmpty" xml:space="preserve">
    <value>You can't save task when field is empty!</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="LoginAlreadyUse" xml:space="preserve">
    <value>Login already use!</value>
  </data>
  <data name="LoginMustBeRequired" xml:space="preserve">
    <value>Login must be required</value>
  </data>
  <data name="LoginUse" xml:space="preserve">
    <value>Login use</value>
  </data>
  <data name="DoYouWantLogout" xml:space="preserve">
    <value>Do you want logout?</value>
  </data>
  <data name="NoteMustBeRequired" xml:space="preserve">
    <value>Note must be required</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OldPasswordFieldMustBeRequired" xml:space="preserve">
    <value>Old password field must be required</value>
  </data>
  <data name="PasswordMustBeRequired" xml:space="preserve">
    <value>Password must be required</value>
  </data>
  <data name="PasswordMustContent8Char" xml:space="preserve">
    <value>Password must content 8 char!</value>
  </data>
  <data name="PasswordMustContentNumber" xml:space="preserve">
    <value>Password must content number char!</value>
  </data>
  <data name="PasswordMustContentUpperChar" xml:space="preserve">
    <value>Password must content upper char!</value>
  </data>
  <data name="TheFieldsPasswordAndPasswordConfirmationShouldBeEquals" xml:space="preserve">
    <value>The fields Password and PasswordConfirmation should be equals</value>
  </data>
  <data name="RegistrateSuccessfulReturnOnLoginPage" xml:space="preserve">
    <value>Registrate successful! Return on Login Page?</value>
  </data>
  <data name="PasswordMustContent8CharNumberCharAndUpperChar" xml:space="preserve">
    <value>Password must content 8 char, number char and upper char.</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success!</value>
  </data>
  <data name="TitleMustBeRequired" xml:space="preserve">
    <value>Title must be required</value>
  </data>
  <data name="WrongOldPassword" xml:space="preserve">
    <value>Wrong old password!</value>
  </data>
  <data name="WrongDataAccountNotFound" xml:space="preserve">
    <value>Wrong data, account not found!</value>
  </data>
  <data name="WrongPasswordConfirm" xml:space="preserve">
    <value>Wrong Password confirm!</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ChangesAccepted" xml:space="preserve">
    <value>Changes accepted</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Camera" xml:space="preserve">
    <value>Camera</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Gallery" xml:space="preserve">
    <value>Gallery</value>
  </data>
  <data name="MyLocated" xml:space="preserve">
    <value>My located</value>
  </data>
  <data name="SelectPicture" xml:space="preserve">
    <value>Select Picture</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password:</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password:</value>
  </data>
  <data name="NewTask" xml:space="preserve">
    <value>New task</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old password:</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="RegistrationPage" xml:space="preserve">
    <value>Registration Page</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ChooseASource" xml:space="preserve">
    <value>Choose a source</value>
  </data>
  <data name="FileDoesntExistMaybeYouMovedOrExportedItEarlieReRunTheApp" xml:space="preserve">
    <value>File doesn't exist. Maybe you moved or Exported it earlier. Re run the app.</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="PhotoSource" xml:space="preserve">
    <value>Photo Source</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="YouDontHaveCamera" xml:space="preserve">
    <value>You don't have camera</value>
  </data>
</root>